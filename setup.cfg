[tool:pytest]
norecursedirs =
    .git
    dist
    build
addopts =
    --strict
    --doctest-modules
    --durations=0
    --color=yes


[coverage:run]
parallel = True
#concurrency = thread, multiprocessing
concurrency = thread

[coverage:report]
exclude_lines =
    pragma: no-cover
    pass
    if __name__ == .__main__.:
# TODO, remove this ignores in future
omit =
    pl_bolts/datamodules/*_datamodule.py
    pl_bolts/datamodules/*_dataset.py


[flake8]
max-line-length = 120
exclude = .tox,*.egg,build,temp
select = E,W,F
doctests = True
verbose = 2
# https://pep8.readthedocs.io/en/latest/intro.html#error-codes
format = pylint
# see: https://www.flake8rules.com/
ignore =
    E231  # Ignore "Missing whitespace after ',', ';', or ':'"
    E731  # Ignore "Do not assign a lambda expression, use a def"
    W503  # Ignore "Line break occurred before a binary operator"
    W504  # Ignore "Line break occurred after a binary operator"
    W605  # Ignore "Invalid escape sequence 'x'"
    E203  # whitespace before ':'


[check-manifest]
ignore =
    *.yml
    .github
    .github/*
    .circleci


[metadata]
license_file = LICENSE
description-file = README.md
# long_description = file:README.md
# long_description_content_type = text/markdown


[mypy]
# Typing tests is low priority, but enabling type checking on the
# untyped test functions (using `--check-untyped-defs`) is still
# high-value because it helps test the typing.
files = pl_bolts, tests
pretty = True
disallow_untyped_defs = True
ignore_missing_imports = True
show_error_codes = True
warn_redundant_casts = True
warn_unused_configs = True

[mypy-pl_bolts.datasets.*]
ignore_errors = True

[mypy-pl_bolts.datamodules]
# pl_bolts/datamodules/__init__.py
ignore_errors = True

[mypy-pl_bolts.datamodules.experience_source]
ignore_errors = True

[mypy-pl_bolts.datamodules.sklearn_datamodule]
ignore_errors = True

[mypy-pl_bolts.datamodules.vocdetection_datamodule]
ignore_errors = True

[mypy-pl_bolts.losses.*]
ignore_errors = True

[mypy-pl_bolts.metrics.*]
ignore_errors = True

[mypy-pl_bolts.models.mnist_module]
ignore_errors = True

[mypy-pl_bolts.models.autoencoders.*]
ignore_errors = True

[mypy-pl_bolts.models.detection.*]
ignore_errors = True

[mypy-pl_bolts.models.gans.*]
ignore_errors = True

[mypy-pl_bolts.models.rl.*]
ignore_errors = True

[mypy-pl_bolts.models.self_supervised.*]
ignore_errors = True

[mypy-pl_bolts.models.vision.*]
ignore_errors = True

[mypy-pl_bolts.optimizers.*]
ignore_errors = True

[mypy-pl_bolts.transforms.*]
ignore_errors = True

[mypy-tests.*]
ignore_errors = True
